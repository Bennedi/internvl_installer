# .github/workflows/release.yml

name: Create Velopack Release

# This workflow is triggered whenever a new tag is pushed that starts with 'v'
# For example: v1.0.0, v1.2.3, v2.0.0-beta1
on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    # We need to run on Windows because you are building a Windows tray icon app
    runs-on: windows-latest

    steps:
      # Step 1: Get your repository's code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up a Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' # Choose the python version you use

      # Step 3: Install your project's dependencies AND velopack
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install velopack
          # If you have a requirements.txt file, uncomment the next line
          # pip install -r requirements.txt

      # Step 4: Run velopack to package your application
      # This command packages the app located in the current directory '.'
      # It uses the GitHub tag (e.g., 'v1.0.1') as the version number.
      - name: Package with Velopack
        run: vpk pack -u "https://github.com/Bennedi/internvl_installer" -e main.py --pack-version ${{ github.ref_name }}

      # Step 5: Create the GitHub Release and upload the packaged files
      # This action takes the files generated by vpk and attaches them to a new release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          # The body of the release. You can customize this.
          body: "Release based on commit ${{ github.sha }}"
          # Find all the files in the 'Releases' directory created by vpk and upload them
          files: |
            Releases/*